[basename命令总结]

#-------------------------------------------------------------------------------------------#
用 途:


    打印目录或者文件的基本名称


补充说明:


    basename命令，用于打印目录或者文件的基本名称。

    basename 和 dirname 命令通常用于shell脚本中的命令替换来指定和指定的输入文件名称有所差异的输出文件名称。

#-------------------------------------------------------------------------------------------#
语 法：


    basename(选项)(参数)

#-------------------------------------------------------------------------------------------#
选 项：



    --help       #←显示帮助；

    --version    #←显示版本号。


#-------------------------------------------------------------------------------------------#
参数:


    文件：带路径信息的文件；

    后缀：可选参数，指定要去除的文件后缀字符串。


#-------------------------------------------------------------------------------------------#
实例:


1、要显示一个shell变量的基本名称，请输入：

basename $WORKFILE

    此命令显示指定给shell变量WORKFILE的值的基本名称。

    如果WORKFILE变量的值是/home/jim/program.c文件，则此命令显示program.c。

    要构造一个和另一个文件名称相同（除了后缀）的文件名称，请输入：

OFILE=`basename $1 .c`.o

    此命令指定给 OFILE 文件第一个位置上的参数（$1）的值，但它的 .c 后缀更改至 .o。

    如果 $1 是 /home/jim/program.c 文件，则 OFILE 成为 program.o。

    因为 program.o 仅是一个基本文件名称，它标识在当前目录中的文件。


2、显示脚本名



[root@Web2 ~]# cat basename.sh 
basename $0


[root@Web2 ~]# sh basename.sh 
basename.sh



3、basename 取：去除目录后所剩下的文件的名字

[root@Web2 ~]# temp=/tmp/temp.log

[root@Web2 ~]# base=`basename $temp`

[root@Web2 ~]# echo $base
temp.log



4、dirname 取：目录

[root@Web2 ~]# temp=/tmp/temp.log

[root@Web2 ~]# base=`dirname $temp`

[root@Web2 ~]# echo $base
/tmp


5、另一种实现的方法：

${var##*/} 就是把变量var最后一个/以及左边的内容去掉

如：

[root@Web2 ~]# cat basename.sh 
temp=/tmp/temp.log
a=${temp##*/}
echo $a

[root@Web2 ~]# sh basename.sh 
temp.log


${var%/*} 就是把变量var最后一个/以及右边的内容去掉

[root@Web2 ~]# cat basename.sh 
temp=/tmp/temp.log
a=${temp%/*}
echo $a

[root@Web2 ~]# sh basename.sh 
/tmp

#-------------------------------------------------------------------------------------------#
(全文完)